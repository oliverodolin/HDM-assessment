---
title: "HDM_Report"
output:
  html_document: default
  pdf: default
  pdf_document: default
---


```{r README, warning =FALSE, message=FALSE, error=FALSE, echo=FALSE, results='hide'}

# All figure generation for the report is encoded in this .Rmd file.

######### SETUP ########

# ENSURE THAT THE "data" FOLDER AND THIS RMD FILE ARE BOTH STORED IN THE SAME LOCATION. OTHERWISE, THE "data" FOLDER 
# WILL BE OUTSIDE OF THE RMD FILE'S WORKING DIRECTORY.

# RUN ALL CHUNKS OF R CODE BELOW THIS LINE IN ORDER. THIS WILL INSURE THAT ALL OF THE RELEVANT PACKAGES ARE INSTALLED AND LOADED.

# All figures generated by the script will be stored in a folder called "figures", stored in the same working directory as this Rmd. file is located.


######### additional notes ... ########

# The default working directory for a .Rmd file is the location of the file. This is the case for the current file.
# The code below depends on data stored in csv files. These csv files are stored within a data folder. Within this
# data folder, there are subfolders (Q1-5). Csv files are split across these subfolders according to which question they answer.

# Changes to the names of the csv files will result in errors when attempted to run the code below (csv files will not be identified and therefore will fail to be loaded into dataframes). So do not change the names of these csv files!

# This Rmd. file was built to generate figures and save them, not to look good when knit. The final report was done in microsoft word (.docx).


```


```{r load packages, warning =FALSE, message=FALSE, error=FALSE, echo=FALSE, results='hide'}
# the default working directory is the location of the R-markdown (.Rmd) file. So all of the paths in the rest of the document
# are established relative to this.

# loading in relevant libraries. Need to make sure that I can make these libraries usable across code chunks, otherwise I will have
# to load them in at the beginning of each chunk while somehow supressing any output generated from loading them ...

# Uncomment the line below to install these packages, if they aren't installed already
# install.packages("tidyverse", "ggpubr", "gt", "data.table", "tibble", "webshot2")

library(tidyverse)
library(ggpubr)
library(gt)
library(data.table)
library(tibble)
library(webshot2)

```

# Question 1

```{r Question 1, warning =FALSE, message=FALSE, error=FALSE, echo=FALSE}
########Create one row data frames for demographics/los/wards and careunits

# # demographics data
# load data
Q1demographics <- read_csv("data/Q1/demographics.csv")

# # wards/careunits data
# load data
Q1wards_and_careunits <- read_csv("data/Q1/unique_wards_visited_by_careunit.csv")

#clean up data values, combine across columns (first) and then rows to reduce the data to one cell.
Q1wards_and_careunits["curr_careunit"][Q1wards_and_careunits["curr_careunit"] != "NULL"] <- paste("(", Q1wards_and_careunits["curr_careunit"][Q1wards_and_careunits["curr_careunit"] != "NULL"], ")", sep="")
Q1wards_and_careunits["curr_careunit"][Q1wards_and_careunits["curr_careunit"] == "NULL"] <- ""
Q1wards_and_careunits <- tibble(ward_and_careunit=c(paste(Q1wards_and_careunits$curr_wardid, Q1wards_and_careunits$curr_careunit)))
Q1wards_and_careunits <- Q1wards_and_careunits %>% 
  select(ward_and_careunit) %>%
  summarise(all_wards_and_careunits = paste(ward_and_careunit, collapse = " | "))

# # length of stay data
# load data
Q1stay_times <- read_csv("data/Q1/stay_times.csv")
Q1stay_times$exact_los_in_hospital_days <- round(as.numeric(Q1stay_times$exact_los_in_hospital_days), 2)
Q1stay_times$exact_los_in_icu_days <- round(as.numeric(Q1stay_times$exact_los_in_icu_days), 2)

##### combine all data in one data frame
Q1patient_data <- Q1demographics
Q1patient_data$hosp_los <- Q1stay_times$exact_los_in_hospital_days
Q1patient_data$total_icu_los <- Q1stay_times$exact_los_in_icu_days
Q1patient_data$all_wards <- Q1wards_and_careunits$all_wards_and_careunits

# clean up workspace
rm(Q1demographics, Q1wards_and_careunits, Q1stay_times)


#### convert the data frame to a table
Q1patient_data_tbl <- gt(Q1patient_data) %>%
  tab_spanner(label = "Length of Stay (days)",
              columns = c(hosp_los, total_icu_los)) %>%
  tab_spanner(label = "Demographics",
              columns = c(gender, admission_age_years, language, religion, marital_status, ethnicity)) %>%
  cols_label(gender = "Gender",
             admission_age_years = "Age at Admission",
             language = "Language",
             religion = "Religion",
             marital_status = "Marital Status",
             ethnicity = "Ethnicity",
             all_wards = "Wards Visited",
             hosp_los = "Hospital Admission",
             total_icu_los = "All ICU Visits") %>% 
  tab_header(title = md("Summary Data for **Patient 42130**"),
             subtitle = "Most Recent Visit Where Simvastatin was Prescribed") %>% 
  gtsave(filename = "figures/Q1table1.png") # saves the table to file as an image


#####Create table for prescriptions and diagnoses#####

## load data and reduce to one cell
Q1icd9_codes_in_sequence_order <- read_csv("data/Q1/icd9_codes_in_sequence_order.csv")
Q1prescriptions <- read_csv("data/Q1/prescriptions.csv")

Q1prescriptions_short <- Q1prescriptions %>% 
  select(drug) %>%
  summarise(all_drugs = paste(drug, collapse = " | "))


Q1icd9_codes_in_sequence_order$icd9_code <- paste("(", Q1icd9_codes_in_sequence_order$icd9_code, ")", sep="")
Q1icd9_codes_in_sequence_order <- Q1icd9_codes_in_sequence_order %>%
  unite(col= diagnoses, c(long_title, icd9_code), sep=" ")

Q1icd9_codes_short <- Q1icd9_codes_in_sequence_order %>% 
  select(diagnoses) %>%
  summarise(all_diagnoses = paste(diagnoses, collapse = " | "))

## combine cells into one dataframe
Q1drug_diagnoses_data <- Q1icd9_codes_short
Q1drug_diagnoses_data$all_drugs <- Q1prescriptions_short$all_drugs

## create and save a table
Q1drug_diagnoses_tbl <- gt(Q1drug_diagnoses_data) %>% 
  cols_label(all_diagnoses = "Diagnoses", all_drugs = "Prescriptions") %>% 
  gtsave(filename = "figures/Q1table2.png")

```


# Question 2

```{r Q2 plot, warning =FALSE, message=FALSE, error=FALSE, echo=FALSE, fig.width=8}

# loading in the data
Q2routine_vital_sign_measures <- read_csv("data/Q2/routine_vital_sign_measures.csv")


# add a column converting charttime to hours since admission
Q2routine_vital_sign_measures$hours_since_admission <- as.numeric(difftime(Q2routine_vital_sign_measures$charttime, min(Q2routine_vital_sign_measures$charttime), units="hours"))


### create plots for each routine vital sign measure

Q2fsize <- 15 # allows me to change the font size in all of the Q2 plots below

# BP plot
Q2systolicBP_plot <- ggplot(Q2routine_vital_sign_measures[is.element(Q2routine_vital_sign_measures$itemid, c(220050, 220179, 220051, 220180)), ], aes(hours_since_admission, valuenum, colour=label)) + 
  geom_point(show.legend = TRUE) + 
  geom_line(show.legend = TRUE) +
  scale_color_manual(name=NULL, breaks = c("Arterial Blood Pressure systolic", "Non Invasive Blood Pressure systolic", "Arterial Blood Pressure diastolic", "Non Invasive Blood Pressure diastolic"), values = c("red", "red3", "blue", "blue3")) +
  scale_x_continuous(name=NULL, limits=c(0, 65), n.breaks=13) +
  scale_y_continuous(name="BP (mmHg)") +
  theme_linedraw() +
  theme(legend.position = c(0.9, 0.5),
        legend.text = element_text(size = 12),
        axis.title.y = element_text(size = Q2fsize),
        axis.text = element_text(size = Q2fsize))



# HR plot
Q2HR_plot <- ggplot(Q2routine_vital_sign_measures[Q2routine_vital_sign_measures$itemid == 220045, ], aes(hours_since_admission, valuenum, colour=label)) +
  geom_point() + 
  geom_line() +
  scale_color_manual(name= NULL, breaks = c("Heart Rate"), values = c("orange")) +
  scale_x_continuous(name=NULL, limits=c(0, 65), n.breaks=13) +
  scale_y_continuous(name="HR (bpm)") +
  theme_linedraw() +
  theme(legend.position = c(0.9, 0.5),
        legend.text = element_text(size = Q2fsize),
        axis.title.y = element_text(size = Q2fsize),
        axis.text = element_text(size = Q2fsize))

# Temperature plot
Q2tempF_plot <- ggplot(Q2routine_vital_sign_measures[Q2routine_vital_sign_measures$itemid == 223761, ], aes(hours_since_admission, valuenum, colour=label)) + 
  geom_point() + 
  geom_line() +
  scale_color_manual(name= NULL, breaks = c("Temperature Fahrenheit"), values = c("chartreuse")) +
  scale_x_continuous(name=NULL, limits=c(0, 65), n.breaks=13) +
  scale_y_continuous(name="temp (FÂ°)") +
  theme_linedraw() +
  theme(legend.position = c(0.9, 0.5),
        legend.text = element_text(size = Q2fsize),
        axis.title.y = element_text(size = Q2fsize),
        axis.text = element_text(size = Q2fsize))

# O2 saturation plot
Q2O2_plot <- ggplot(Q2routine_vital_sign_measures[Q2routine_vital_sign_measures$itemid == 220277, ], aes(hours_since_admission, valuenum, colour=label)) +
  geom_point() +
  geom_line() +
  scale_color_manual(name= NULL, breaks = c("O2 saturation pulseoxymetry"), values = c("chartreuse4")) +
  scale_x_continuous(name=NULL, limits=c(0, 65), n.breaks=13) +
  scale_y_continuous(name="O2 sat (%)") +
  theme_linedraw() +
  theme(legend.position = c(0.9, 0.5),
        legend.text = element_text(size = Q2fsize),
        axis.title.y = element_text(size = Q2fsize),
        axis.text = element_text(size = Q2fsize))

# Respiratory Rate plot
Q2RR_plot <- ggplot(Q2routine_vital_sign_measures[Q2routine_vital_sign_measures$itemid == 220210, ], aes(hours_since_admission, valuenum, colour=label)) +
  geom_point() +
  geom_line() +
  scale_color_manual(name= NULL, breaks = c("Respiratory Rate"), values = c("purple")) +
  scale_x_continuous(name="Hours since admission", limits=c(0, 65), n.breaks=13) +
  scale_y_continuous(name="RR (bpm)") +
  theme_linedraw() +
  theme(legend.position = c(0.9, 0.5),
        legend.text = element_text(size = Q2fsize),
        axis.title.y = element_text(size = Q2fsize),
        axis.title.x = element_text(size = 20),
        axis.text = element_text(size = Q2fsize))

# combine all of the plots into one figure
Q2all_plots <- ggarrange(Q2HR_plot, Q2systolicBP_plot, Q2O2_plot, Q2tempF_plot, Q2RR_plot, nrow=6, ncol=1)

# Add a figure title
annotate_figure(Q2all_plots, top= text_grob("Patient 42130: Routine Quantitative Vital Signs", size=30))

# save the plot as a .png
ggsave(filename="figures/Q2plot.png")

```


# Question 3

```{r Q3 table, warning =FALSE, message=FALSE, error=FALSE, echo=FALSE}
#load data
Q3visit_lengths_by_gender_and_icu_death <- read_csv("data/Q3/visit_lengths_by_gender_and_icu_death.csv")
Q3visit_lengths_by_gender_and_icu_death <- Q3visit_lengths_by_gender_and_icu_death %>% 
  mutate(across(where(is.numeric), round, 2))

#create two different data frames for table presentation
Q3hospital_visits <- Q3visit_lengths_by_gender_and_icu_death[c(1:7)]
Q3icu_visits <- Q3visit_lengths_by_gender_and_icu_death[c(1,2, 8:12)]

#create tables
Q3hospital_visits_tbl <- gt(Q3hospital_visits) %>%
    tab_spanner(label="Patient Group",
              columns = c(gender, icu_death)) %>% 
  tab_spanner(label="Total Length of Stay in Hospital (days)",
              columns = c(min_hospital_visit_length, q1_hospital_visit_length, median_hospital_visit_length, q3_hospital_visit_length, max_hospital_visit_length)) %>%
  cols_label(gender = "Gender",
             icu_death = "Died in ICU",
             min_hospital_visit_length = "Min",
             q1_hospital_visit_length = "Q1",
             median_hospital_visit_length = "Median",
             q3_hospital_visit_length = "Q3",
             max_hospital_visit_length = "Max") %>%
  tab_header(title = md("Visit Length for Similar* Patients"),
             subtitle = md("*60-65 & Cardiac Device")) %>% 
  gtsave(filename = "figures/Q3table1.png") # save table as a .png file

Q3icu_visits_tbl <- gt(Q3icu_visits) %>%
  tab_spanner(label="Patient Group",
              columns = c(gender, icu_death)) %>% 
  tab_spanner(label="Total Length of Stay in ICU (days)",
              columns = c(min_icu_visit_length, q1_icu_visit_length, median_icu_visit_length, q3_icu_visit_length, max_icu_visit_length)) %>% 
  cols_label(gender = "Gender",
             icu_death = "Died in ICU",
             min_icu_visit_length = "Min",
             q1_icu_visit_length = "Q1",
             median_icu_visit_length = "Median",
             q3_icu_visit_length = "Q3",
             max_icu_visit_length = "Max") %>% 
  gtsave(filename = "figures/Q3table2.png") # save table as a .png file
```


# Question 4

``` {r Q4 table, warning =FALSE, message=FALSE, error=FALSE, echo=FALSE}
 # load data
Q4icu_death_patients_data <- read_csv("data/Q4/icu_death_patients_data.csv")
Q4icu_death_patients_data <- Q4icu_death_patients_data %>% 
  mutate(across(where(is.numeric), round, 2))

# create a table
Q4patient_tbl <- gt(Q4icu_death_patients_data) %>%
  cols_label(subject_id = "Subject ID",
             first_careunit = "First Careunit",
             gender = "Sex",
             age = "Age",
             total_days_in_icu = "Days in ICU",
             icd9_diagnoses_and_codes = "Top Priority ICD9 Diagnoses/Codes") %>% 
  tab_style(style = cell_text(whitespace = "nowrap"), locations = cells_column_labels()) %>% 
  tab_header(title = md("Summary Data for ALL Patients who Died in the ICU and were 60-65 yrs with a Cardiac Device")) %>% 
  # tab_options(table.width = 800) %>% 
  gtsave(filename = "figures/Q4table.png") # save table as a .png file

```


# Question 5

``` {r Q5 barplots, warning =FALSE, message=FALSE, error=FALSE, echo=FALSE, fig.width= 4}

# Q5mean_icustay_times_by_subgroups <- read_csv("data/Q5/mean_icustay_times_by_subgroups.csv")
Q5df_wide <- read_csv("data/Q5/mean_icustay_times_by_subgroups.csv")


#convert data from wide to long format
Q5df_long <- melt(setDT(Q5df_wide), id.vars = "curr_careunit")
Q5df_long$value <- as.numeric(Q5df_long$value)

Q5fontsize <- 12 # allows me to change font size in the Q5 plot below

# create grouped boxplot graph
Q5barplot <- ggplot(Q5df_long[is.element(Q5df_long$curr_careunit, c("SICU", "NICU", "CSRU", "MICU", "TSICU", "CCU")) ], aes(fill=variable, y=value, x=curr_careunit)) +
    geom_hline(yintercept = Q5df_long[is.element(Q5df_long$curr_careunit, "All ICUs"), value], colour = c("black", "purple", "red", "blue"), linetype="dotted") +
  geom_col(width = 0.4 , position= position_dodge(0.5), stat="identity") +
  scale_x_discrete(name="Intensive Care Unit") +
  scale_y_continuous(name = "Average Length of Stay (days)", limits=c(0, 11), n.breaks = 12) +
  scale_fill_manual(name="Patient Group",
                    breaks = c("mean_icustay_per_admission", "cd_and_age_avg_icustay_per_admission", "simvastatin_avg_icustay_per_admission", "no_simvastatin_avg_icustay_per_admission"),
                    values = c("black", "purple", "red", "blue"),
                    labels = c("All Patients", "60-65 yrs & Cardiac Device", "Purple Criteria & Simvastatin Treatment During Visit", "Purple Criteria & NO Simvastatin Treatment During Visit")) +
  theme_linedraw() + 
  theme(legend.position = c(0.7, 0.2),
        legend.title = element_text(size = 10),
        legend.text = element_text(size = 8),
        axis.title.y = element_blank(),
        axis.title.x = element_text(size = Q5fontsize),
        axis.text = element_text(size = Q5fontsize)) +
  coord_flip()

# adds figure title and note below the figure
annotate_figure(Q5barplot, top = text_grob("Average Total Length of Stay in each ICU (per admission)", size = 20), bottom = text_grob(label="*dotted lines represent average length of stay across all ICUs", size = 10))

# saves figure as a .png file
ggsave(filename = "figures/Q5plot.png")

```
